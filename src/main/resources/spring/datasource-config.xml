<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for Datasource. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/data/jpa 
         http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- ========================= DATASOURCE DEFINITION ========================= -->

	<!-- JDBC-related settings for the dataSource definition -->
	<context:property-placeholder location="classpath:conf/datasource-config.properties"
		system-properties-mode="OVERRIDE" />
		
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}"
		p:initialSize="${jdbc.initialSize}" p:maxActive="${jdbc.maxActive}" />

    <!--
        Creates the transaction manager bean that integrates the used JPA provider with the
        Spring transaction mechanism.
    -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enables annotation-driven transaction management. 
    <tx:annotation-driven/>
	-->
	
    <!--
        Specifies the default settings that are compatible with Hibernate.
    -->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
    	p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>

    <!-- Creates the bean that creates the JPA entity manager factory. -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="com.tradevan.ptrs.rest.model"/>
        <property name="jpaProperties">
            <props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>

                <!--
                    Specifies the action that is invoked to the database when the Hibernate
                    SessionFactory is created or closed.
                -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

                <!--
                    Configures the naming strategy that is used when Hibernate creates
                    new database objects and schema elements
                
                <prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
				-->
                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

    <jpa:repositories base-package="com.tradevan.ptrs.rest.repository"/>
		

</beans>